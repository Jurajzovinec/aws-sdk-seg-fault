# syntax=docker/dockerfile:1
# https://docs.docker.com/develop/develop-images/multistage-build/

ARG NODE_VERSION=14.15.3-alpine3.11

# Dev stage
FROM node:$NODE_VERSION AS base

WORKDIR /usr/src/app

RUN apk add --no-cache --update \ 
                        python3 \ 
                        make \ 
                        g++ \
                        libunwind \
                        libunwind-dev 

# Build stage
FROM node:$NODE_VERSION AS build

WORKDIR /usr/src/app

COPY . .

RUN npm ci && npm run build


# Run-time stage
FROM node:$NODE_VERSION

WORKDIR /usr/src/app

#Â Copy the "artifacts" built in the previous stage to this one
COPY --chown=node:node --from=build /usr/src/app/package.json /usr/src/app/package-lock.json ./
COPY --chown=node:node --from=build /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=build /usr/src/app/dist ./dist

# Clean dev packages
# https://github.com/goldbergyoni/nodebestpractices/blob/master/sections/docker/install-for-production.md
RUN npm prune --production

EXPOSE 3000
EXPOSE 9494

USER node

CMD ["node", "dist/main.js"]
